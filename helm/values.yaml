# values.yaml
# Global parameters
namespace: "helm"
postgresName: "postgresql"
fastapiName: "fastapi-deployment"
pgadminName: "pgadmin"

# ConfigMap
configmap:
  name: "my-configmap"
  data:
    value: "trust"
    email: "test@test.com"

# Secret
secret:
  name: "my-secret"
  type: "Opaque"
  data:
    user: "YWRtaW4="
    db: "c3RvcmVkYg=="
    pwd: "cGFzc3dvcmQ="
    pgadminpwd: "cm9vdA=="

# Images
imageFastApi:
  repository: "ayakayu/myapp"
  tag: "v2"

imagePostgres:
  repository: "postgres"
  tag: "12.0-alpine"

imagePgadmin:
  repository: "dpage/pgadmin4"

# HorizontalPodAutoscaler
autoscaling:
  enabled: true
  name: "hpa"
  minReplicas: 3
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70

# Ingress
ingress:
  enabled: false

# Services
services:
  - name: "postgresql"
    type: "ClusterIP"
    port: 5432
    targetPort: 5432
  - name: "fastapi"
    type: "NodePort"
    port: 80
    targetPort: 8000
    nodePort: 30005
  - name: "pgadmin"
    type: "NodePort"
    port: 8080
    targetPort: 80
    nodePort: 30006

# Service Account
serviceAccount:
  create: true
  name: "default"
  automount: true
  annotations: {}

# Deployment
image:
  repository: "ayakayu/myapp"
  tag: "v2"
  pullPolicy: "IfNotPresent"

replicaCount: 3
podAnnotations: {}
podLabels: {}
imagePullSecrets: []
podSecurityContext: {}
securityContext: {}
resources: {}
volumeMounts: []
volumes: []
nodeSelector: {}
affinity: {}
tolerations: []

# PersistentVolume and PersistentVolumeClaim
pv:
  name: "my-pv-helm"
  storageClassName: "manual-helm"
  capacity: "10Gi"
  accessMode: "ReadWriteMany"
  hostPath: "/mnt/postgres"

pvc:
  name: "my-pvc-helm"
  storageClassName: "manual-helm"
  accessMode: "ReadWriteMany"
  capacity: "10Gi"

# StorageClass
storageClass:
  name: "manual-helm"
  provisioner: "ebs.csi.aws.com"
  reclaimPolicy: "Retain"
  volumeBindingMode: "WaitForFirstConsumer"
