apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.postgresName }}
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/component: {{ .Values.postgresName }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  serviceName: postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgresName }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresName }}
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.imagePostgres.repository }}:{{ .Values.imagePostgres.tag }}"
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: user
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: db
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: pwd
        - name: POSTGRES_HOST_AUTH_METHOD
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configmap.name }}
              key: value
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "{{ .Values.pvc.accessMode }}" ]
      resources:
        requests:
          storage: {{ .Values.pvc.capacity }}
